entities.get.all = PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                   PREFIX dbo: <http://dbpedia.org/ontology/> \
                   PREFIX foaf: <http://xmlns.com/foaf/0.1/> \
                   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \
                   PREFIX dcterms: <http://purl.org/dc/terms/> \
                   PREFIX skos: <http://www.w3.org/2004/02/skos/core#> \
                   SELECT distinct ?id (IF(?typed = 'Visitor', 'landmark', ?typed) as ?type) ?lat ?long ?name ?seeAlso ?links \
                   WHERE { \
                   \
                         ?entity skos:broader ?category . \
                         FILTER IF( CONTAINS(STR(?category), ?typed ), true, false) \
                   \
                         ?places skos:broader ?entity . \
                         ?places rdfs:label ?city . \
                         FILTER langMatches(lang(?city),"en") . \
                   \
                         ?id dcterms:subject ?places . \
                         ?id rdfs:label ?label . \
                         ?id geo:lat ?lat . \
                         ?id geo:long ?long . \
                         ?id dbo:wikiPageExternalLink ?links . \
                          ?id foaf:name ?name  \
                          OPTIONAL { \
                             ?id rdfs:seeAlso ?seeAlso \
                          } \
                         FILTER langMatches(lang(?label),"en"). \
                   \
                         FILTER ( ?long >= 21 && ?long <= 28 && ?lat >= 44 && ?lat <= 48) \
                   \
                         VALUES ?typed { \
                                "museum" \
                                "Visitor" \
                                "transport" \
                                "tourism" \
                                "airport" \
                                "monaster" \
                          } \
                   } LIMIT 1000
wifi.get.all =  PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                PREFIX omn-owl: <http://www.openmobilenetwork.org/ontology/> \
                PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \
                SELECT distinct ?id ?lat ?long ?name ?type where { \
                   ?id geo:lat ?lat . \
                   ?id geo:long ?long . \
                   ?id omn-owl:hasSSID ?name \
                   OPTIONAL { \
                        ?id rdf:type ?type \
                    } \
                   FILTER ( ?long > :long: - :radius: && ?long < :long: + :radius: && ?lat > :lat: - :radius: && ?lat < :lat: + :radius:)\
                } \
                LIMIT 100

user.get.by.name = PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                   PREFIX foaf: <http://xmlns.com/foaf/0.1/> \
                   PREFIX bapr: <http://www.bapr.com/ontology/> \
                   SELECT distinct * where { \
                       ?id a foaf:Person .\
                       ?id foaf:name ":name:"@en \
                   }

user.get.by.id = PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                   PREFIX foaf: <http://xmlns.com/foaf/0.1/> \
                   PREFIX bapr: <http://www.bapr.com/ontology/> \
                   SELECT distinct * where { \
                       VALUES ?id { <:id:>  } \
                       ?id a foaf:Person \
                   }
                   
entity.get.details =  PREFIX dbo: <http://dbpedia.org/ontology/> \
                      PREFIX foaf: <http://xmlns.com/foaf/0.1/> \
                      SELECT ?id ?name ?abstract ?link ?thumbnail \
                      WHERE { \
                          VALUES ?id { <:id:>  } \
                          ?id foaf:name ?name .\
                          ?id dbo:abstract ?abstract \
                          OPTIONAL { \
                             ?id dbo:thumbnail ?thumbnail .\
                          } \
                          ?id dbo:wikiPageExternalLink ?link \
                          FILTER (lang(?name) = 'en')  \
                          FILTER (lang(?abstract) = 'en') \
                      }

user.get.journeys = PREFIX bapro: <http://www.bapr.com/ontology/> \
                    PREFIX baprp: <http://www.bapr.com/property/> \
                    PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                    PREFIX foaf: <http://xmlns.com/foaf/0.1/> \
                    PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \
                    SELECT ?id ?name ?status ?creationDate ?locationId ?locationName ?lat ?locStatus ?long where { \
                    VALUES ?userid { <:id:>  } \
                         ?id rdfs:type bapro:Journey . \
                         ?id baprp:hasOwner ?userid . \
                         ?id baprp:hasLocation ?ceva . \
                         ?ceva <http://www.bapr.com/ontology/Journey/status> ?locStatus . \
                         ?ceva <http://www.bapr.com/ontology/Journey/locationId> ?locationId .\
                         ?locationId foaf:name ?locationName . \
                         ?locationId geo:lat ?lat . \
                         ?locationId geo:long ?long . \
                         ?id <http://www.bapr.com/ontology/Journey/name> ?name . \
                         ?id <http://www.bapr.com/ontology/Journey/status> ?status . \
                         ?id <http://www.bapr.com/ontology/Journey/creationDate> ?creationDate . \
                    }
user.update.current.location = PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                               DELETE { \
                                   ?userid geo:lat ?a . \
                                   ?userid geo:long ?b \
                               } \
                               INSERT { \
                                   ?userid geo:lat :lat: . \
                                   ?userid geo:long :long: \
                               } \
                               WHERE { \
                                   VALUES ?userid { <:id:>  } \
                                    ?userid geo:lat ?a . \
                                    ?userid geo:long ?b \
                               }

user.update.journey.location = PREFIX bapro: <http://www.bapr.com/ontology/> \
                               PREFIX baprp: <http://www.bapr.com/property/> \
                               PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                               PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \
                               DELETE { \
                                  ?ceva <http://www.bapr.com/ontology/Journey/status> ?locStatus . \
                               } \
                               INSERT { \
                                  ?ceva <http://www.bapr.com/ontology/Journey/status> :status: . \
                               } \
                               WHERE { \
                                  VALUES ?userid { <:id:>  } \
                                  VALUES ?journeyId { <:journeyId:>  } \
                                  VALUES ?entityId { <:entityId:>  } \
                                    ?journeyId rdfs:type bapro:Journey . \
                                    ?journeyId baprp:hasOwner ?userid . \
                                    ?journeyId baprp:hasLocation ?ceva . \
                                    ?ceva <http://www.bapr.com/ontology/Journey/locationId> ?entityId .\
                                    ?ceva <http://www.bapr.com/ontology/Journey/status> ?locStatus .\
                               }
user.update.journey.status =PREFIX bapro: <http://www.bapr.com/ontology/> \
                            PREFIX baprp: <http://www.bapr.com/property/> \
                            PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> \
                            PREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \
                            DELETE { \
                               ?journeyId <http://www.bapr.com/ontology/Journey/status> ?status . \
                            } \
                            INSERT { \
                               ?journeyId <http://www.bapr.com/ontology/Journey/status> :status: . \
                            } \
                            WHERE { \
                               VALUES ?userid { <:id:>  } \
                               VALUES ?journeyId { <:journeyId:>  } \
                               ?journeyId rdfs:type bapro:Journey . \
                               ?journeyId baprp:hasOwner ?userid . \
                               ?journeyId <http://www.bapr.com/ontology/Journey/status> ?status . \
                            }
